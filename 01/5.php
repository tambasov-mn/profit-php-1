<?php
/* 5. В PHP имеется логический (boolean) тип, имеющий два значения - true (истина) и false (ложь).
 * Изучите с помощью var_dump() следующие выражения и объясните их:
 *  1. 1 == 1.0
 *  2. 1 === 1.0
 *  3. '02' == 2
 *  4. '02' === 2
 *  5. '02' == '2'
 * (прочитайте предварительно http://fi2.php.net/manual/ru/language.operators.comparison.php)
 */

// 1. Прочитал (http://fi2.php.net/manual/ru/language.operators.comparison.php)

// 2. Изучите с помощью var_dump() следующие выражения и объясните их:

// 1. 1 == 1.0
var_dump(1 == 1.0); // bool(true)
// нестрогое равенство, поэтому происходит преобразование типов.
echo '<br>';

// 2. 1 === 1.0
var_dump(1 === 1.0); // bool(false)
// строгое равенство или тождественно равно, поэтому преобразование типов не происходит,
// так как в этом случае кроме самих значений сравниваются еще и типы
echo '<br>';

// 3. '02' == 2
var_dump('02' == 2); // bool(true)
// нестрогое равенство, поэтому происходит преобразование типов.
echo '<br>';

// 4. '02' === 2
var_dump('02' === 2); // bool(false)
// строгое равенство или тождественно равно, поэтому преобразование типов не происходит,
// так как в этом случае кроме самих значений сравниваются еще и типы
echo '<br>';

// 5. '02' == '2'
var_dump('02' == '2'); // bool(true)
// нестрогое равенство, поэтому происходит преобразование типов.
echo '<br>';

/*
 * Ответ:
 * В случае, если вы сравниваете число со строкой или две строки, содержащие числа,
 * каждая строка будет преобразована в число, и сравниваться они будут как числа.
 * (Эти правила также распространяются на оператор switch.)
 * Преобразование типов не происходит при использовании === или !== так как в этом случае
 * кроме самих значений сравниваются еще и типы.
 */
