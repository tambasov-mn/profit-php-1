<?php
/**
 * ДОМАШНЯЯ РАБОТА №2. Задание 4.*:
 *
 * Составьте функцию, которая на вход будет принимать имя человека, а возвращать его пол,
 * пытаясь угадать по имени (null - если угадать не удалось).
 * Вам придется самостоятельно найти нужные вам строковые функции.
 * Начните с написания тестов для функции.
 */

/**
 * Функция определяет пол человека по его имени
 * @param string $name_human Имя человека
 * @return string Мужчина | string Женщина | null
 */
function sex_determination_by_name ( $name_human )
{

    // Создадим БД в виде массива.
    // Данные возьмем из Википедии.
    // Русские мужские имена: https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%80%D0%B8%D1%8F:%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B5_%D0%BC%D1%83%D0%B6%D1%81%D0%BA%D0%B8%D0%B5_%D0%B8%D0%BC%D0%B5%D0%BD%D0%B0
    // Русские женские имена: https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%80%D0%B8%D1%8F:%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B5_%D0%B6%D0%B5%D0%BD%D1%81%D0%BA%D0%B8%D0%B5_%D0%B8%D0%BC%D0%B5%D0%BD%D0%B0
    $db_names_of_people_in_russia = [
        'm' => [
            'Авдей',
            'Аверкий',
            'Авксентий',
            'Агафон',
            'Александр',
            'Алексей',
            'Альберт',
            'Альвиан',
            'Анатолий',
            'Андрей',
            'Антон',
            'Антонин',
            'Анфим',
            'Аристарх',
            'Аркадий',
            'Арсений',
            'Артём',
            'Артур',
            'Архипп',
            'Афанасий',
            'Богдан',
            'Борис',
            'Вадим',
            'Валентин',
            'Валерий',
            'Валерьян',
            'Варлам',
            'Варфоломей',
            'Василий',
            'Венедикт',
            'Вениамин',
            'Викентий',
            'Виктор',
            'Виссарион',
            'Виталий',
            'Владимир',
            'Владислав',
            'Владлен',
            'Влас',
            'Всеволод',
            'Вячеслав',
            'Гавриил',
            'Галактион',
            'Геласий',
            'Геннадий',
            'Георгий',
            'Герасим',
            'Герман',
            'Глеб',
            'Гордей',
            'Григорий',
            'Даниил',
            'Демид',
            'Демьян',
            'Денис',
            'Дмитрий',
            'Добрыня',
            'Донат',
            'Дорофей',
            'Евгений',
            'Евграф',
            'Евдоким',
            'Евсей',
            'Евстафий',
            'Егор',
            'Емельян',
            'Еремей',
            'Ермолай',
            'Ефим',
            'Ждан',
            'Зиновий',
            'Иакинф',
            'Иван',
            'Игнатий',
            'Игорь',
            'Илья',
            'Иннокентий',
            'Ираклий',
            'Ириней',
            'Исидор',
            'Иулиан',
            'Касьян',
            'Ким',
            'Кирилл',
            'Климент',
            'Кондрат',
            'Константин',
            'Корнилий',
            'Кузьма',
            'Куприян',
            'Лаврентий',
            'Лев',
            'Леонид',
            'Леонтий',
            'Лука',
            'Лукий',
            'Лукьян',
            'Магистриан',
            'Макар',
            'Максим',
            'Марк',
            'Мартын',
            'Матвей',
            'Мелентий',
            'Мирон',
            'Мирослав',
            'Митрофан',
            'Михаил',
            'Мстислав',
            'Назар',
            'Нестор',
            'Никанор',
            'Никита',
            'Никифор',
            'Николай',
            'Никон',
            'Олег',
            'Онисим',
            'Павел',
            'Пантелеймон',
            'Парфений',
            'Пётр',
            'Платон',
            'Порфирий',
            'Потап',
            'Прокопий',
            'Протасий',
            'Прохор',
            'Разумник',
            'Родион',
            'Роман',
            'Ростислав',
            'Руслан',
            'Савва',
            'Савелий',
            'Самуил',
            'Святополк',
            'Святослав',
            'Севастьян',
            'Семён',
            'Сергей',
            'Сильвестр',
            'Созон',
            'Спиридон',
            'Станислав',
            'Степан',
            'Тарас',
            'Тимофей',
            'Тимур',
            'Тихон',
            'Трифон',
            'Трофим',
            'Фаддей',
            'Фёдор',
            'Федосей',
            'Федот',
            'Феликс',
            'Феоктист',
            'Филат',
            'Филипп',
            'Фома',
            'Харитон',
            'Христофор',
            'Эдуард',
            'Эраст',
            'Юлиан',
            'Юрий',
            'Юстин',
            'Яков',
            'Якун',
            'Ярослав'
        ],
        'w' => [
            'Агафья',
            'Акулина',
            'Агриппина',
            'Алевтина',
            'Александра',
            'Алина',
            'Алла',
            'Анастасия',
            'Ангелина',
            'Анжела',
            'Анжелика',
            'Анна',
            'Антонина',
            'Валентина',
            'Валерия',
            'Варвара',
            'Василиса',
            'Вера',
            'Вероника',
            'Галина',
            'Глафира',
            'Дана',
            'Дарья',
            'Евгения',
            'Евдокия',
            'Евпраксия',
            'Евфросиния',
            'Екатерина',
            'Елена',
            'Елизавета',
            'Епистима',
            'Ермиония',
            'Жанна',
            'Зинаида',
            'Злата',
            'Зоя',
            'Инга',
            'Инесса',
            'Инна',
            'Иоанна',
            'Ираида',
            'Ирина',
            'Ия',
            'Карина',
            'Каролина',
            'Кира',
            'Клавдия',
            'Ксения',
            'Лада',
            'Лариса',
            'Лидия',
            'Лилия',
            'Любовь',
            'Людмила',
            'Маргарита',
            'Марина',
            'Мария',
            'Марфа',
            'Матрёна',
            'Мирослава',
            'Надежда',
            'Наталья',
            'Нина',
            'Нонна',
            'Оксана',
            'Октябрина',
            'Ольга',
            'Пелагея',
            'Пинна',
            'Полина',
            'Прасковья',
            'Рада',
            'Раиса',
            'Римма',
            'Светлана',
            'Серафима',
            'Снежана',
            'София',
            'Таисия',
            'Тамара',
            'Татьяна',
            'Ульяна',
            'Фаина',
            'Феврония',
            'Фёкла',
            'Феодора',
            'Целестина',
            'Юлия',
            'Яна',
            'Ярослава',
        ],

    ];

    // test
    // return var_dump ( $db_names_of_people_in_russia );

    // ................................................................................................................

    // Подкорректируем входящие данные $name_human, в соответствии нашим требованиям:

    $name_human_fix = null;

    // 1. Если значения нет или если значение  менее 2 букв или более 20 букв

    if ( !$name_human ) {
        return null;
    } elseif (strlen($name_human) <= 4 || strlen($name_human) >= 40) {
        return null;
    } else {

        // 2. Оставляем только русские буквы
        $name_human_fix_1 = preg_replace('/[^А-Яа-я]/u', '', $name_human);
        //return $name_human_fix_1; // михАил

        // 3. Приводим строку к нижнему регистру и применим кодировку UTF-8
        $name_human_fix_2 = mb_strtolower($name_human_fix_1, 'UTF-8');
        //return $name_human_fix_2; // михаил

        // 4. Сделаем первую букву заглавной

        // Режим текст на 2 части
        $name_human_fix_2_first_letter = mb_substr($name_human_fix_2, 0, 1); // первая буква
        $name_human_fix_2_other_letters = mb_substr($name_human_fix_2, 1); // все кроме первой буквы
        //return $name_human_fix_2_first_letter . ' -- ' . $name_human_fix_2_other_letters; // м -- ихаил

        // Сделаем первую букву заглавной
        $name_human_fix_2_first_letter_upper = mb_strtoupper($name_human_fix_2_first_letter); // сделаем букву заглавной
        // return $name_human_fix_2_first_letter_upper; // М

        // Склеим в одно слово
        $name_human_fix_3 = $name_human_fix_2_first_letter_upper . $name_human_fix_2_other_letters;

        // 5.
        $name_human_fix = $name_human_fix_3;
        // return $name_human_fix;
    }

    // ................................................................................................................

    // Проверим есть ли соответствие имени значениям в массиве БД.

    // Проверим соответствует ли имя - мужскому имени:
    $name_human_is_m = in_array($name_human_fix, $db_names_of_people_in_russia['m']);
    //return $name_human_is_m;

    // Проверим соответствует ли имя - женскому имени:
    $name_human_is_w = in_array($name_human_fix, $db_names_of_people_in_russia['w']);
    //return $name_human_is_w;

    // ................................................................................................................

    // В соответствии от значения - вернем результат:

    $m = 'Мужчина';
    $w = 'Женщина';
    $val_not_found = null;

    if ((true == $name_human_is_m) && (false == $name_human_is_w)) {
        return $m;
    } elseif ((false == $name_human_is_m) && (true == $name_human_is_w)) {
        return $w;
    } else {
        return $val_not_found;
    }

}

// ТЕСТЫ: .............................................................................................................

// var_dump ( sex_determination_by_name ($name_human) ); // test 1: test db

assert ( null ==  sex_determination_by_name (42 )); // ;)
assert ( null ==  sex_determination_by_name ('Мвнктдантьпвкщфтпнслыкееолдар') );
assert ( null ==  sex_determination_by_name ('zxczxcsdfrrwertywetywrty') );
assert ( null ==  sex_determination_by_name ('') );
assert ( null ==  sex_determination_by_name ('Кот') );
assert ( null ==  sex_determination_by_name ('М') );

assert ( 'Мужчина' ==  sex_determination_by_name ('михаил') );
assert ( 'Мужчина' ==  sex_determination_by_name ('Михаил') );
assert ( 'Женщина' ==  sex_determination_by_name ('Ярослава') );


// Пример: ............................................................................................................

$name_human = 'михАил';

echo sex_determination_by_name( $name_human ); ?>
<br>
<?php echo var_dump( sex_determination_by_name ( $name_human ) ); ?>











