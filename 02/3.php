<?php
/**
 * ДОМАШНЯЯ РАБОТА №2. Задание 3.:
 *
 * Проведите самостоятельное исследование на тему "Что возвращает оператор include, если его использовать как функцию?".
 *
 * Используйте руководство по языку, составьте и приложите примеры, иллюстрирующие ваше исследование.
 *
 */

// РЕШЕНИЕ: ...........................................................................................................

// 1. Используйте руководство по языку, составьте и приложите примеры, иллюстрирующие ваше исследование.

// Почитал:
// http://php.net/manual/ru/function.include.php

// 2. Проведите самостоятельное исследование на тему "Что возвращает оператор include, если его использовать как функцию?".

?>
    Пример 1:
<?php
// ....................................................................................................................

// Если использовать оператор include, как функцию - то конструкция include возвращает:

// ....................................................................................................................

// 1. Попробуем включить существующий файл (не PHP), в котом есть код PHP:

// Содержание файла '3-include.ini':
/*
Я файл '3-include.ini'!
echo '[БЛОК НЕ PHP]';
return $a = 'return';
<?php echo $a = 2*2; ?\>
*/

// Прримеры:
?>

<br>
<?php
var_dump(include __DIR__ . '/3-include.ini'); // Я файл '3-include.ini'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 4int(1)
?>

<br>
<?php
$res1 = include __DIR__ . '/3-include.ini';
echo $res1; // Я файл '3-include.ini'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 41
?>

<br>
<?php
include __DIR__ . '/3-include.ini'; // Я файл '3-include.ini'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 4
?>

<?php
// Рассуждение:

// include выводит (в том месте, где он использован):
//   1. 'Я файл '3-include.ini'! echo '[БЛОК НЕ PHP]';' - все содержимое включаемого файла в виде текста.
//
//   2. '4' - результат (<?php echo $a = 2*2; ?\>)  - если найдены метки <?php ?\> то содержимое данного блока
//      выводится в поток PHP (выполняется как PHP программа).
//      Строки 'echo '[БЛОК НЕ PHP]'; return $a = 'return'; ' -  была не в <?php ?\> блоке и вывелась как текст.
//
//   3. int(1) - (похоже на bool(true)) - статус включаемого файла (файл '3-include.ini' есть и подключен).

?>


<br><br>Пример 2:
<?php
// ....................................................................................................................

// 2. Попробуем включить существующий файл, такойже по содержанию как в пр. 1, только с расширением PHP:

// Содержание файла '3-include.php':
/*
Я файл '3-include.php'!
echo '[БЛОК НЕ PHP]';
return $a = 'return';
<?php echo $a = 2*2; ?\>
*/

// Прримеры:
?>

<br>
<?php
var_dump(include __DIR__ . '/3-include.php'); // Я файл '3-include.php'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 4int(1)
?>

<br>
<?php
$res2 = include __DIR__ . '/3-include.php';
echo $res2; // Я файл '3-include.php'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 41
?>

<br>
<?php
include __DIR__ . '/3-include.php'; // Я файл '3-include.php'! echo '[БЛОК НЕ PHP]'; return $a = 'return'; 4
?>

<?php
// Рассуждение:

// Результат такойже, как в примере 1.

?>


<br><br>Пример 3:
<?php
// ....................................................................................................................

// 3. Проверим, если указать имя несуществующего файла:

// Прримеры:
?>

<br>
<?php
var_dump(include( __DIR__ . '/3-include.php42')); // bool(false)
var_dump(include( __DIR__ . '')); // bool(false)
?>

<br>
<?php
$res3 = include __DIR__ . '/3-include.php42';
echo $res3; // ''
// приведем результат к целому числу - чтобы увидеть bool(false)
echo (int) $res3; // 0
// нужно посмотреть в var_dump() - тк тут явно false
?>

<br>
<?php
include __DIR__ . '/3-include.php42'; // ''
// приведем результат к целому числу - чтобы увидеть bool(false)
echo (int) include __DIR__ . '/3-include.php42'; // 0
?>

<?php
// Рассуждение:

// Если include не сможет найти файл - то конструкция include (выдаст warning): вернув bool(false).

?>



<br><br>Пример 4:
<?php
// ....................................................................................................................

// 4. У include есть "фишка":
// Файлы в PHP, как и функции, могут возвращать значения с помощью оператора return.
// Чтобы это значение получить - достаточно получить то, что вернет конструкция include.

// Содержание файла '3-return.php':
/*
<?php
return 21 * 2;
 */

// Прримеры:
?>

<br>
<?php
var_dump(include( __DIR__ . '/3-return.php')); // int(42)
?>

<br>
<?php
$res4 = include __DIR__ . '/3-return.php';
echo $res4; // 42
?>

<br>
<?php
include __DIR__ . '/3-return.php'; // ''
echo include __DIR__ . '/3-return.php'; // 42
?>

<?php
// ....................................................................................................................

// Доп. Рассуждение:

// Если включение происходит внутри функции включающего файла, тогда весь код, содержащийся во
// включаемом файле, будет вести себя так, как будто он был определен внутри этой функции.
// То есть, он будет в той же области видимости переменных этой функции.
// Исключением к этому правилу являются магические константы, которые выполняются парсером перед тем, как происходит включение.

?>